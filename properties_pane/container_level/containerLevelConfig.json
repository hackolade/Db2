/*
* Copyright © 2016-2017 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in
* the agreement/contract under which the software has been supplied.


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyKeyword": "grpProp",
				"propertyType": "group",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item.
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			},
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/
[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "Authorization",
				"propertyKeyword": "authorizationName",
				"propertyTooltip": "Identifies the user who is the owner of the schema. The value of authorization-name is also used to name the schema if schema name is not specified. The authorization-name must not identify a schema already described in the catalog",
				"propertyType": "text"
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"shouldValidate": false,
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "markdown"
				}
			},
			{
				"propertyName": "Data capture",
				"propertyKeyword": "dataCapture",
				"propertyTooltip": "Indicates whether extra information for data replication is to be written to the log.",
				"propertyType": "select",
				"options": [
					"",
					"NONE",
					"CHANGES"
				]
			},
			{
				"propertyName": "If not exist",
				"propertyKeyword": "ifNotExist",
				"defaultValue": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "markdown"
				}
			}
		],
		"containerLevelKeys": []
	},
	{
		"lowerTab": "Sequences",
		"structure": [
			{
				"propertyName": "Sequences",
				"propertyType": "group",
				"propertyKeyword": "sequences",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Sequence name",
						"propertyKeyword": "sequenceName",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Or replace",
						"propertyKeyword": "orReplace",
						"propertyType": "checkbox",
						"propertyTooltip": "Specifies that if a procedure with the same name and input argument data types, or signature, as this one already exists, the existing function is replaced. You can only replace a function with a new function that defines an identical set of data types."
					},
					{
						"propertyName": "Data type",
						"propertyKeyword": "dataType",
						"propertyTooltip": "The data type determines the default minimum and maximum values of the sequence.",
						"propertyType": "select",
						"defaultValue": "bigint",
						"options": [
							"smallint",
							"integer",
							"bigint",
							"decimal"
						]
					},
					{
						"propertyName": "Precision",
						"propertyKeyword": "precision",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false,
						"typeDecorator": true,
						"dependency": {
							"key": "dataType",
							"value": [
								"decimal"
							]
						}
					},
					{
						"propertyName": "Scale",
						"propertyKeyword": "scale",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false,
						"typeDecorator": true,
						"dependency": {
							"key": "dataType",
							"value": [
								"decimal"
							]
						}
					},
					{
						"propertyName": "Start",
						"propertyKeyword": "start",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "Allows the sequence to begin anywhere. The default starting value is minvalue for ascending sequences and maxvalue for descending ones.",
						"maxValue": 999999999999999
					},
					{
						"propertyName": "Increment",
						"propertyKeyword": "increment",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "The data type determines the default minimum and maximum values of the sequence.",
						"maxValue": 999999999999999
					},
					{
						"propertyName": "Min value",
						"propertyKeyword": "minValue",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "Determines the minimum value a sequence can generate. If this clause is not supplied is specified, then defaults will be used. The default for an ascending sequence is 1. The default for a descending sequence is the minimum value of the data type.",
						"maxValue": 999999999999999
					},
					{
						"propertyName": "Max value",
						"propertyKeyword": "maxValue",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "Determines the maximum value for the sequence. If this clause is not supplied is specified, then default values will be used. The default for an ascending sequence is the maximum value of the data type. The default for a descending sequence is -1.",
						"maxValue": 999999999999999
					},
					{
						"propertyName": "Cache",
						"propertyKeyword": "cache",
						"propertyType": "numeric",
						"valueType": "number",
						"propertyTooltip": "specifies how many sequence numbers are to be preallocated and stored in memory for faster access. The minimum value is 1 (only one value can be generated at a time, i.e., no cache), and this is also the default",
						"minValue": 1,
						"maxValue": 999999999999999
					},
					{
						"propertyName": "Cycle",
						"propertyKeyword": "cycle",
						"propertyTooltip": "Allows the sequence to wrap around when the maxvalue or minvalue has been reached by an ascending or descending sequence respectively. If the limit is reached, the next number generated will be the minvalue or maxvalue, respectively.",
						"defaultValue": false,
						"propertyType": "checkbox"
					}
				]
			}
		]
	},
	{
		"lowerTab": "Functions",
		"structure": [
			{
				"propertyName": "Functions",
				"propertyType": "group",
				"propertyKeyword": "UDFs",
				"propertyTooltip": "Creates a new scalar user-defined function (UDF) using either a SQL SELECT clause or a Python program.",
				"structure": [
					{
						"propertyName": "Name",
						"propertyKeyword": "name",
						"propertyTooltip": "The name of the function.",
						"propertyType": "text"
					},
					{
						"propertyName": "Comments",
						"propertyKeyword": "functionDescription",
						"propertyTooltip": "description",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					},
					{
						"propertyName": "Or replace",
						"propertyKeyword": "functionOrReplace",
						"propertyType": "checkbox",
						"propertyTooltip": "Specifies that if a function with the same name and input argument data types, or signature, as this one already exists, the existing function is replaced. You can only replace a function with a new function that defines an identical set of data types."
					},
					{
						"propertyName": "Arguments",
						"propertyKeyword": "functionArguments",
						"propertyType": "group",
						"propertyTooltip": "",
						"structure": [
							{
								"propertyName": "Arg mode",
								"propertyKeyword": "argumentMode",
								"propertyTooltip": "The mode of an argument",
								"propertyType": "select",
								"defaultValue": "IN",
								"options": [
									"IN",
									"OUT",
									"INOUT"
								]
							},
							{
								"propertyName": "Argument name",
								"propertyKeyword": "argumentName",
								"propertyTooltip": "The name of the argument.",
								"propertyType": "text"
							},
							{
								"propertyName": "Argument type",
								"propertyKeyword": "argumentType",
								"propertyTooltip": "The type of argument.",
								"propertyType": "text"
							},
							{
								"propertyName": "Default expression",
								"propertyKeyword": "defaultExpression",
								"propertyTooltip": "The argument types can be base, composite, or domain types, or can reference the type of a table column.",
								"propertyType": "details",
								"template": "codeEditor",
								"templateOptions": {
									"editorDialect": "pgsql"
								}
							}
						]
					},
					{
						"propertyName": "Returns data type",
						"propertyKeyword": "functionReturnType",
						"propertyTooltip": "Any valid DB2 data type",
						"propertyType": "text"
					},
					{
						"propertyName": "Definition",
						"propertyKeyword": "functionBody",
						"propertyTooltip": "A string constant defining the function; the meaning depends on the language. It can be an internal function name, the path to an object file, an SQL command, or text in a procedural language.",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"markdown": false
					},
					{
						"propertyName": "Remarks",
						"propertyKeyword": "functionComments",
						"propertyTooltip": "comments",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			}
		]
	},
	{
		"lowerTab": "Procedures",
		"structure": [
			{
				"propertyName": "Procedures",
				"propertyType": "group",
				"propertyKeyword": "Procedures",
				"propertyTooltip": "Creates a new stored procedure or replaces an existing procedure for the current database.",
				"structure": [
					{
						"propertyName": "Name",
						"propertyKeyword": "name",
						"propertyTooltip": "The name of the procedure.",
						"propertyType": "text"
					},
					{
						"propertyName": "Type",
						"propertyKeyword": "procedureType",
						"propertyType": "select",
						"defaultValue": "sql",
						"options": [
							"sql",
							"external",
							"sourced"
						]
					},
					{
						"propertyName": "Comments",
						"propertyKeyword": "description",
						"propertyTooltip": "description",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					},
					{
						"propertyName": "Or replace",
						"propertyKeyword": "orReplace",
						"propertyType": "checkbox",
						"propertyTooltip": "Specifies that if a procedure with the same name and input argument data types, or signature, as this one already exists, the existing function is replaced. You can only replace a function with a new function that defines an identical set of data types."
					},
					{
						"propertyName": "Arguments",
						"propertyKeyword": "inputArgs",
						"propertyType": "group",
						"propertyTooltip": "",
						"structure": [
							{
								"propertyName": "Arg mode",
								"propertyKeyword": "argumentMode",
								"propertyTooltip": "The mode of an argument: IN, INOUT, or VARIADIC.",
								"propertyType": "select",
								"defaultValue": "IN",
								"options": [
									"IN",
									"OUT",
									"INOUT"
								]
							},
							{
								"propertyName": "Argument name",
								"propertyKeyword": "argumentName",
								"propertyTooltip": "The name of the argument.",
								"propertyType": "text"
							},
							{
								"propertyName": "Argument type",
								"propertyKeyword": "argumentType",
								"propertyTooltip": "The type of argument.",
								"propertyType": "text"
							},
							{
								"propertyName": "Default clause",
								"propertyKeyword": "defaultExpression",
								"propertyTooltip": "",
								"propertyType": "details",
								"template": "codeEditor",
								"templateOptions": {
									"editorDialect": "pgsql"
								}
							}
						]
					},
					{
						"propertyName": "Procedure body",
						"propertyKeyword": "body",
						"propertyTooltip": "Valid procedure statement.",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"markdown": false,
						"dependency": {
							"key": "procedureType",
							"value": "sql"
						}
					},
					{
						"propertyName": "Remarks",
						"propertyKeyword": "comments",
						"propertyTooltip": "comments",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			}
		]
	}
]
