/*
* Copyright © 2016-2017 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in
* the agreement/contract under which the software has been supplied.


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item.
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			},
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/
{
	"lowerTab": "JsonDetails",
	"structure": {
		"char": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"char",
					"varchar",
					"graphic",
					"vargraphic",
					"clob"
				],
				"data": "options",
				"valueType": "string",
				"cleanDependency": true
			},
			{
				"propertyName": "Length",
				"propertyKeyword": "length",
				"propertyType": "numeric",
				"valueType": "number",
				"propertyTooltip": "Setting for Length must be between 1 and 127",
				"minValue": 1,
				"maxValue": 127,
				"step": 1,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"graphic"
					]
				}
			},
			{
				"propertyName": "Length",
				"propertyKeyword": "length",
				"propertyType": "numeric",
				"valueType": "number",
				"propertyTooltip": "Setting for Length must be between 1 and 16336",
				"minValue": 1,
				"maxValue": 16336,
				"step": 1,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"vargraphic"
					]
				}
			},
			{
				"propertyName": "Length",
				"propertyKeyword": "length",
				"propertyType": "numeric",
				"valueType": "number",
				"propertyTooltip": "Setting for Length must be between 1 and 255",
				"minValue": 1,
				"maxValue": 255,
				"step": 1,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"char"
					]
				}
			},
			{
				"propertyName": "Length",
				"propertyKeyword": "length",
				"propertyType": "numeric",
				"valueType": "number",
				"propertyTooltip": "Setting for Length must be between 1 and 32672",
				"minValue": 1,
				"maxValue": 32672,
				"step": 1,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"varchar"
					]
				}
			},
			{
				"propertyName": "Length",
				"propertyKeyword": "length",
				"propertyType": "text",
				"propertyTooltip": "Setting for Length must be between 1 and 10485760",
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"clob"
					]
				}
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Collation rule",
				"propertyKeyword": "collationRule",
				"propertyTooltip": "If different than default.  For example us_EN or be_FR",
				"propertyType": "text",
				"dependency": {
					"key": "mode",
					"value": [
						"char",
						"varchar",
						"text"
					]
				}
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "pgsql"
				},
				"markdown": false,
				"dependency": {
					"key": "generatedColumn",
					"value": true
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"key": "primaryKey",
					"value": true
				},
				"disabled": true,
				"defaultValue": true
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "primaryKey",
							"value": false
						},
						{
							"key": "primaryKey",
							"exists": false
						}
					]
				},
				"defaultValue": false
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "markdown"
				}
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [{
								"level": "siblings",
								"value": {
									"type": "and",
									"values": [{
										"key": "primaryKey",
										"value": true
									},
										{
											"type": "or",
											"values": [
												{
													"key": "compositeUniqueKey",
													"value": false
												},
												{
													"key": "compositeUniqueKey",
													"exist": false
												}
											]
										}]
								}
							}]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"minLength",
			"maxLength",
			"pattern",
			"format",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "markdown"
				}
			}
		],
		"numeric": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"smallint",
					"integer",
					"bigint",
					"decimal",
					"real",
					"double",
					"float",
					"decfloat"
				],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Precision",
				"propertyKeyword": "precision",
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"decimal",
						"float",
						"decfloat"
					]
				}
			},
			{
				"propertyName": "Scale",
				"propertyKeyword": "scale",
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": [
						"decimal"
					]
				}
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Computed column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A computed column is a special column that is always computed from other columns",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Computed column expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "pgsql"
				},
				"markdown": false,
				"dependency": {
					"key": "generatedColumn",
					"value": true
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "markdown"
				}
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [{
								"level": "siblings",
								"value": {
									"type": "and",
									"values": [{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}]
								}
							}]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"unit",
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			"pattern",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "markdown"
				}
			}
		]
	}
}
