/*
* Copyright © 2016-2017 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in
* the agreement/contract under which the software has been supplied.
In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item.
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			},
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/

[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"propertyType": "details",
				"addTimestampButton": false,
				"template": "textarea"
			},
			{
				"propertyName": "Or replace",
				"propertyKeyword": "orReplace",
				"defaultValue": false,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "As query",
				"propertyKeyword": "selectStatement",
				"propertyTooltip": "A SELECT or VALUES command which will provide the columns and rows of the view.",
				"propertyType": "details",
				"template": "codeEditor",
				"templateOptions": {
					"editorDialect": "pgsql"
				},
				"markdown": false
			},
			{
				"propertyName": "With check option",
				"propertyKeyword": "withCheckOption",
				"propertyTooltip": "This clause specifies optional parameters for a view",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Check testing scope",
				"propertyKeyword": "checkTestingScope",
				"propertyTooltip": "Specifies the constraint that every row that is inserted or updated through the view must conform to the definition of the view. A row that does not conform to the definition of the view is a row that does not satisfy the search conditions of the view.",
				"propertyType": "select",
				"options": [
					"",
					"LOCAL",
					"CASCADED"
				],
				"dependency": {
					"key": "withCheckOption",
					"value": true
				}
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"propertyTooltip": "remarks",
				"propertyType": "details",
				"addTimestampButton": true,
				"markdown": true,
				"template": "textarea"
			},
			{
				"propertyKeyword": "pipeline",
				"hidden": true
			},
			{
				"propertyKeyword": "viewOn",
				"hidden": true
			}
		]
	},
	{
		"lowerTab": "Triggers",
		"structure": [
			{
				"propertyName": "Triggers",
				"propertyType": "group",
				"propertyKeyword": "triggers",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Name",
						"propertyKeyword": "name",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Description",
						"propertyKeyword": "triggerDescription",
						"propertyTooltip": "description",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					},
					{
						"propertyName": "Or replace",
						"propertyKeyword": "triggerOrReplace",
						"propertyType": "checkbox",
						"propertyTooltip": ""
					},
					{
						"propertyName": "Trigger type",
						"propertyKeyword": "triggerType",
						"propertyTooltip": "Determines whether the function is called before, after, or instead of the event.",
						"propertyType": "select",
						"options": [
							"BEFORE",
							"AFTER",
							"INSTEAD OF"
						],
						"defaultValue": "AFTER"
					},
					{
						"propertyName": "No cascade",
						"propertyKeyword": "triggerNoCascade",
						"propertyType": "checkbox",
						"propertyTooltip": "",
						"dependency": {
							"key": "triggerType",
							"value": "BEFORE"
						}
					},
					{
						"propertyName": "Trigger events",
						"propertyKeyword": "triggerEvents",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"markdown": false
					},
					{
						"propertyName": "Referencing",
						"propertyKeyword": "triggerReferencing",
						"propertyType": "checkbox",
						"propertyTooltip": "Specifies the correlation names for the transition variables and the table names for the transition tables."
					},
					{
						"propertyName": "Old as",
						"propertyKeyword": "triggerOldAs",
						"propertyType": "text",
						"propertyTooltip": "Specifies a correlation name which identifies the row state before the triggering SQL operation.",
						"dependency": {
							"key": "triggerReferencing",
							"value": true
						}
					},
					{
						"propertyName": "New as",
						"propertyKeyword": "triggerNewAs",
						"propertyType": "text",
						"propertyTooltip": "Specifies a correlation name which identifies the row state as modified by the triggering SQL operation and by any SET statement in a BEFORE trigger that has already executed.",
						"dependency": {
							"key": "triggerReferencing",
							"value": true
						}
					},
					{
						"propertyName": "Old table as",
						"propertyKeyword": "triggerOldTableAs",
						"propertyType": "text",
						"propertyTooltip": "Specifies the name of a temporary table that identifies the values in the complete set of affected rows prior to the triggering SQL operation.",
						"dependency": {
							"key": "triggerReferencing",
							"value": true
						}
					},
					{
						"propertyName": "New table as",
						"propertyKeyword": "triggerNewTableAs",
						"propertyType": "text",
						"propertyTooltip": "Specifies the name of a temporary table that identifies the state of the complete set of affected rows as modified by the triggering SQL operation and by any SET statement in a before trigger that has already been executed.",
						"dependency": {
							"key": "triggerReferencing",
							"value": true
						}
					},
					{
						"propertyName": "Trigger for each row",
						"propertyKeyword": "triggerEachRow",
						"propertyType": "checkbox",
						"propertyTooltip": "Specifies that the triggered action is to be applied once for each row of the subject table or subject view that is affected by the triggering SQL operation."
					},
					{
						"propertyName": "Trigger for each statement",
						"propertyKeyword": "triggerEachStatement",
						"propertyType": "checkbox",
						"propertyTooltip": "Specifies that the triggered action is to be applied only once for the whole statement.",
						"dependency": {
							"type": "or",
							"values": [
								{
									"key": "triggerType",
									"value": "UPDATE"
								},
								{
									"key": "triggerType",
									"value": "DELETE"
								}
							]
						}
					},
					{
						"propertyName": "Trigger WHEN condition",
						"propertyKeyword": "triggerCondition",
						"propertyTooltip": "A Boolean expression that determines whether the trigger function will actually be executed.",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"markdown": false
					},
					{
						"propertyName": "Function",
						"propertyKeyword": "triggerFunction",
						"propertyTooltip": "description",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "pgsql"
						},
						"markdown": false
					},
					{
						"propertyName": "Remarks",
						"propertyKeyword": "triggerComments",
						"propertyTooltip": "comments",
						"propertyType": "details",
						"template": "codeEditor",
						"templateOptions": {
							"editorDialect": "markdown"
						}
					}
				]
			}
		]
	}
]
